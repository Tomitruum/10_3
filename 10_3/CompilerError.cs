namespace PascalCompiler.IOModule.Models
{
    public static class ErrorTable
    {
        public static readonly Dictionary<int, string> Errors = new()
        {
            // Лексические ошибки из исходного кода
            { 100, "использование имени не соответствует описанию" },
            { 147, "тип метки не совпадает с типом выбирающего выражения" },
            { 203, "число превышает допустимый диапазон" },
            { 301, "незакрытая строка" },
            { 302, "недопустимый символ" },
            { 304, "незакрытый комментарий" },
            
            // Синтаксические ошибки
            { 401, "ожидалось имя программы" },
            { 402, "ожидался оператор begin" },
            { 403, "программа должна завершаться точкой" },
            { 404, "ожидался токен" }, // Будет дополняться конкретным токеном
            { 405, "ожидался тип данных после ':'" },
            { 406, "ожидался стандартный тип после 'of'" },
            { 407, "ожидался 'end' для записи" },
            { 408, "ожидался 'end'" },
            { 409, "ожидалось выражение" }
        };
    }
    public class CompilerError
    {
        public int Line { get; set; }
        public int Column { get; set; }
        public int ErrorCode { get; set; }
        public int ErrorNumber { get; set; }
        public string Message { get; set; }
    }
}
